
package org.jboss.soa.esb.samples.quickstart.helloworld.client;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.xml.namespace.QName;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.7-04/11/2011 03:11 PM(mockbuild)-
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "HelloWorldWS", targetNamespace = "http://helloworld.quickstart.samples.esb.soa.jboss.org/", wsdlLocation = "http://127.0.0.1:8080/Quickstart_helloworld_ejb3_ws/HelloWorldEjbWSBean?wsdl")
public class HelloWorldWS extends Service
{

    private final static URL HELLOWORLDWS_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(org.jboss.soa.esb.samples.quickstart.helloworld.client.HelloWorldWS.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = org.jboss.soa.esb.samples.quickstart.helloworld.client.HelloWorldWS.class.getResource(".");
            url = new URL(baseUrl, "http://127.0.0.1:8080/Quickstart_helloworld_ejb3_ws/HelloWorldEjbWSBean?wsdl");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'http://127.0.0.1:8080/Quickstart_helloworld_ejb3_ws/HelloWorldEjbWSBean?wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        HELLOWORLDWS_WSDL_LOCATION = url;
    }

    public HelloWorldWS(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public HelloWorldWS() {
        super(HELLOWORLDWS_WSDL_LOCATION, new QName("http://helloworld.quickstart.samples.esb.soa.jboss.org/", "HelloWorldWS"));
    }

    /**
     * 
     * @return
     *     returns HelloWorldEjbWS
     */
    @WebEndpoint(name = "HelloWorldEjbWSBeanPort")
    public HelloWorldEjbWS getHelloWorldEjbWSBeanPort() {
        return super.getPort(new QName("http://helloworld.quickstart.samples.esb.soa.jboss.org/", "HelloWorldEjbWSBeanPort"), HelloWorldEjbWS.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns HelloWorldEjbWS
     */
    @WebEndpoint(name = "HelloWorldEjbWSBeanPort")
    public HelloWorldEjbWS getHelloWorldEjbWSBeanPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://helloworld.quickstart.samples.esb.soa.jboss.org/", "HelloWorldEjbWSBeanPort"), HelloWorldEjbWS.class, features);
    }

    @WebMethod
    @RequestWrapper(localName = "sayHello", targetNamespace = "http://helloworld.quickstart.samples.esb.soa.jboss.org/", className = "org.jboss.soa.esb.samples.quickstart.helloworld.client.SayHello")
    @ResponseWrapper(localName = "sayHelloResponse", targetNamespace = "http://helloworld.quickstart.samples.esb.soa.jboss.org/", className = "org.jboss.soa.esb.samples.quickstart.helloworld.client.SayHelloResponse")
    public void sayHello(
            @WebParam(name = "arg0", targetNamespace = "") String arg0) {
        // TODO Auto-generated method stub
        
    }

}
